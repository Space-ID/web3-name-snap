name: Space ID Name Snap

on:
  release:
    types:
      - created
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.FE_DEPLOYER_AWS_ACCESS_KEY_ID_2 }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.FE_DEPLOYER_AWS_SECRET_ACCESS_KEY_2 }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '18'
        # env:
        #   GITHUB_RELEASE_TAG: ${{ GITHUB_REF_NAME }}
      - run: yarn install
      - run: SENTRY_RELEASE=${{ github.sha }} yarn build:export

      # - name: Create Stg Sentry release
      #   uses: getsentry/action-release@v1
      #   env:
      #     SENTRY_AUTH_TOKEN: 4dd2ce137a8f48f2a4d551bfca331661528cb290ec3143048dd7a45b1d242980
      #     SENTRY_ORG: space-id
      #     SENTRY_PROJECT: space-id-2-stg
      #     SENTRY_URL: https://sentry.space.id
      #   with:
      #     version: ${{ github.sha }}
      #     environment: stg
      #     set_commits: skip
      #     sourcemaps: ./out
      #     dist: stg
      #     url_prefix: ~/

      - name: Remove Source Map
        run: find ./out -name "*.map" | xargs rm -f {} \;

      # - name: Deploy
      #   uses: reggionick/s3-deploy@v3
      #   with:
      #     folder: 'out'
      #     bucket: 'test-static-space-id'
      #     bucket-region: 'us-west-2'
      #     dist-id: 'E1B3Z9PYO7BDH0'
      #     invalidation: /
      #     delete-removed: true
      #     no-cache: false
      #     private: true

      - name: Get short SHA
        id: slug
        run: echo "::set-output name=sha7::$(echo ${GITHUB_SHA} | cut -c1-7)"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ECR_DEPLOYER_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ECR_DEPLOYER_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: spaceid-name-snap
          IMAGE_TAG_0: ${{ github.sha }}
          IMAGE_TAG_1: sha-${{ steps.slug.outputs.sha7 }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_0 -f Dockerfile.Ssr -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_1 .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY --all-tags

  deploy:
    name: Deploy with GitOps
    runs-on: ubuntu-latest
    needs: build-and-deploy
    env:
      GITOPS_REPO: Space-ID/spaceid-infra-bootstrap

    steps:
      - name: Get short SHA
        id: slug
        run: echo "::set-output name=sha7::$(echo ${GITHUB_SHA} | cut -c1-7)"

      - name: Checkout Gitops code
        # https://github.com/actions/checkout/issues/417
        uses: actions/checkout@v2.3.3
        with:
          repository: ${{ env.GITOPS_REPO }}
          fetch-depth: 1 # use 0 if later pushing to different branch
          token: ${{ secrets.GITOPS_REPO_PAT }}

      - name: Update test image tag - Testnet
        uses: docker://ryanlime/kyriosctl:latest
        with:
          args: gitops updateTag -t sha-${{ steps.slug.outputs.sha7 }} -d app/prd/spaceid-name-snap

      - name: Commit files - Testnet
        run: |
          git config --local user.email "spaceid-bot@users.noreply.github.com"
          git config --local user.name "SpaceId Bot"
          git commit -a -m "[release][test][spaceid-name-snap] ${{ steps.slug.outputs.sha7 }}" -m "https://github.com/${{ github.repository }}/commit/${{ github.sha }}"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          repository: ${{ env.GITOPS_REPO }}
          branch: main
          github_token: ${{ secrets.GITOPS_REPO_PAT }}
